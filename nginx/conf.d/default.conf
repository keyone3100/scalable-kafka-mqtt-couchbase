# Upstream definitions for load balancing and health checks
upstream betting_service {
    server betting-service:3000 max_fails=3 fail_timeout=30s;
}

upstream audit_service {
    server audit-service:3002 max_fails=3 fail_timeout=30s;
}

upstream notification_service {
    server notification-service:3001 max_fails=3 fail_timeout=30s;
}

upstream kafka_ui {
    server kafka-ui:8080 max_fails=3 fail_timeout=30s;
}

upstream couchbase_ui {
    server couchbase:8091 max_fails=3 fail_timeout=30s;
}

upstream flashmq_ws {
    server flashmq:8080 max_fails=3 fail_timeout=30s;
}

# Main server block
server {
    listen 80;
    server_name _;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Betting Service API - http://[aws_url]/api
    location /api {
        # Remove /api prefix before forwarding
        rewrite ^/api/?(.*) /$1 break;
        
        proxy_pass http://betting_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;
        
        # Handle OPTIONS requests for CORS
        if ($request_method = 'OPTIONS') {
            return 204;
        }
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # MQTT WebSocket - ws://[aws_url]/ws
    location /ws {
        # Remove /ws prefix before forwarding
        rewrite ^/ws/?(.*) /$1 break;
        
        proxy_pass http://flashmq_ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Couchbase Web UI - http://[aws_url]/couchbase
    location /couchbase {
        # Remove /couchbase prefix before forwarding
        rewrite ^/couchbase/?(.*) /$1 break;
        
        proxy_pass http://couchbase_ui;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Couchbase specific headers
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        
        # Timeouts for admin interface
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Kafka UI (Kowl/Redpanda Console) - http://[aws_url]/kowl
    location /kowl {
        # Remove /kowl prefix before forwarding
        rewrite ^/kowl/?(.*) /$1 break;
        
        proxy_pass http://kafka_ui;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Internal services health checks (for monitoring)
    location /health/betting {
        internal;
        proxy_pass http://betting_service/;
    }

    location /health/audit {
        internal;
        proxy_pass http://audit_service/;
    }

    location /health/notification {
        internal;
        proxy_pass http://notification_service/;
    }

    # Default fallback for any unmatched paths
    location / {
        return 404 "Not Found";
        add_header Content-Type text/plain;
    }
}

# Optional: SSL/HTTPS configuration (commented out for now)
# server {
#     listen 443 ssl http2;
#     server_name _;
#
#     ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
#     ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
#
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # Include the same location blocks as the HTTP server above
# }
