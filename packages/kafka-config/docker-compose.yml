services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9094:9094" # external (host) access
      - "9092:9092" # internal (container network)
    environment:
      # KRaft mode settings (no ZooKeeper)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER

      # Single-node development-friendly settings
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1",
        ]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 40s

  kafka-ui:
    image: redpandadata/console:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: kafka:9092

  flashmq:
    build:
      context: https://github.com/halfgaar/FlashMQ.git#v1.23.0
      dockerfile: Dockerfile
      target: build
    container_name: flashmq
    ports:
      - "1883:1883" # MQTT standard port
      - "8883:8883" # MQTT over SSL/TLS port
      - "8081:8080" # WebSocket port (avoid conflict with kafka-ui)
    volumes:
      - flashmq-config:/etc/flashmq
      - flashmq-data:/var/lib/flashmq
      - flashmq-logs:/var/log/flashmq
    restart: unless-stopped
    command:
      - /bin/sh
      - -c
      - |
        cat > /etc/flashmq/flashmq.conf << 'EOF'
        allow_anonymous true

        listen {
          port 1883
          protocol mqtt
        }

        listen {
          port 8080
          protocol websockets
        }
        EOF
        /usr/src/app/FlashMQBuildRelease/flashmq
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 1883 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  flashmq-config:
  flashmq-data:
  flashmq-logs:
